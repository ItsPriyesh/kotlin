== foo ==
fun foo() {
    class A {
        var a : Int
          get() {
              return field
          }
          set(v: Int) {
              field = v
          }
    }
}
---------------------
=====================
== get_a ==
get() {
              return field
          }
---------------------
                   <v0>: A     NEW: magic[IMPLICIT_RECEIVER](field) -> <v0>
field              <v1>: Int   NEW: r(field|<v0>) -> <v1>
return field       !<v2>: *
{ return field }   !<v2>: *    COPY
=====================
== set_a ==
set(v: Int) {
              field = v
          }
---------------------
                <v0>: Int   NEW: magic[FAKE_INITIALIZER](v: Int) -> <v0>
                <v1>: A     NEW: magic[IMPLICIT_RECEIVER](field) -> <v1>
v               <v2>: Int   NEW: r(v) -> <v2>
field = v       !<v3>: *
{ field = v }   !<v3>: *    COPY
=====================
